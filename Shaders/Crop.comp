#version 450
#extension GL_ARB_compute_variable_group_size: enable

layout (location = 0) uniform uvec2 offset;
layout (location = 1) uniform uvec2 destinationSize;
layout (location = 2) uniform uvec2 sourceSize;
layout (location = 3) uniform uint shape;

layout (std430, binding = 0) buffer DESTINATION 
{
	vec4 destination[];
};

layout (std430, binding = 1) buffer SOURCE 
{
	vec4 source[];
};

layout (local_size_x = 4, local_size_y = 4, local_size_z = 1) in;

void main() 
{
	uint x = gl_GlobalInvocationID.x;
	uint y = gl_GlobalInvocationID.y;
	uint destinationIndex = y * destinationSize.x + x;

    uint sourceIndex = (y + offset.y) * sourceSize.x + (x + offset.x);
	
	destination[destinationIndex] = source[sourceIndex];

	float alpha = 1.0f;
	
	if(shape == 0)
	{
		if(x < 48 || x > destinationSize.x - 48 || y < 48 || y > destinationSize.y - 48)
			alpha = 0.0f;
	}
	else
	{
		uint deltaX = destinationSize.x / 2 - x;
		uint deltaY = destinationSize.y / 2 - y;
		
		float radius = sqrt(float(deltaX * deltaX + deltaY * deltaY));
		if(uint(radius) > destinationSize.x / 2 - 48)
			alpha = 0.0f; 
	}

    destination[destinationIndex].a = alpha;
}